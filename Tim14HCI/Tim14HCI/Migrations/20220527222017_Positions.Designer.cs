// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tim14HCI.Model;

namespace Tim14HCI.Migrations
{
    [DbContext(typeof(SerbiaRailwayContext))]
    [Migration("20220527222017_Positions")]
    partial class Positions
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tim14HCI.Model.Departure", b =>
                {
                    b.Property<int>("DepartureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("StartTimeEveryday")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrainLineID")
                        .HasColumnType("int");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartureID");

                    b.HasIndex("TrainLineID");

                    b.ToTable("departures");
                });

            modelBuilder.Entity("Tim14HCI.Model.LinkedStation", b =>
                {
                    b.Property<int>("Station1ID")
                        .HasColumnType("int");

                    b.Property<int>("Station2ID")
                        .HasColumnType("int");

                    b.HasKey("Station1ID", "Station2ID");

                    b.HasIndex("Station2ID");

                    b.ToTable("linkedStations");

                    b.HasData(
                        new
                        {
                            Station1ID = 1,
                            Station2ID = 2
                        },
                        new
                        {
                            Station1ID = 1,
                            Station2ID = 3
                        },
                        new
                        {
                            Station1ID = 1,
                            Station2ID = 5
                        },
                        new
                        {
                            Station1ID = 2,
                            Station2ID = 3
                        },
                        new
                        {
                            Station1ID = 5,
                            Station2ID = 6
                        });
                });

            modelBuilder.Entity("Tim14HCI.Model.OnWayStation", b =>
                {
                    b.Property<int>("TrainLineID")
                        .HasColumnType("int");

                    b.Property<int>("StationOrder")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("StationID")
                        .HasColumnType("int");

                    b.Property<float>("Time")
                        .HasColumnType("real");

                    b.Property<int?>("TrainLineID1")
                        .HasColumnType("int");

                    b.HasKey("TrainLineID", "StationOrder");

                    b.HasIndex("StationID");

                    b.HasIndex("TrainLineID1")
                        .IsUnique()
                        .HasFilter("[TrainLineID1] IS NOT NULL");

                    b.ToTable("onWayStations");
                });

            modelBuilder.Entity("Tim14HCI.Model.Station", b =>
                {
                    b.Property<int>("StationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("position_x")
                        .HasColumnType("int");

                    b.Property<int>("position_y")
                        .HasColumnType("int");

                    b.HasKey("StationID");

                    b.ToTable("stations");

                    b.HasData(
                        new
                        {
                            StationID = 1,
                            Name = "Beograd",
                            position_x = 85,
                            position_y = 95
                        },
                        new
                        {
                            StationID = 2,
                            Name = "Novi Sad",
                            position_x = 30,
                            position_y = 50
                        },
                        new
                        {
                            StationID = 3,
                            Name = "Subotica",
                            position_x = 40,
                            position_y = 10
                        },
                        new
                        {
                            StationID = 4,
                            Name = "Zrenjanin",
                            position_x = 70,
                            position_y = 60
                        },
                        new
                        {
                            StationID = 5,
                            Name = "Niš",
                            position_x = 130,
                            position_y = 160
                        },
                        new
                        {
                            StationID = 6,
                            Name = "Leskovac",
                            position_x = 160,
                            position_y = 230
                        });
                });

            modelBuilder.Entity("Tim14HCI.Model.Ticket", b =>
                {
                    b.Property<int>("TicketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartureID")
                        .HasColumnType("int");

                    b.Property<bool>("ForReservation")
                        .HasColumnType("bit");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("TicketID");

                    b.HasIndex("DepartureID");

                    b.HasIndex("UserID");

                    b.ToTable("tickets");
                });

            modelBuilder.Entity("Tim14HCI.Model.Train", b =>
                {
                    b.Property<int>("TrainID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<float>("MaxSpeed")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrainID");

                    b.ToTable("trains");

                    b.HasData(
                        new
                        {
                            TrainID = 1,
                            Capacity = 120,
                            MaxSpeed = 160f,
                            Name = "Soko"
                        },
                        new
                        {
                            TrainID = 2,
                            Capacity = 50,
                            MaxSpeed = 60f,
                            Name = "Cira"
                        },
                        new
                        {
                            TrainID = 3,
                            Capacity = 100,
                            MaxSpeed = 100f,
                            Name = "Krsko"
                        },
                        new
                        {
                            TrainID = 4,
                            Capacity = 200,
                            MaxSpeed = 200f,
                            Name = "Soko II"
                        });
                });

            modelBuilder.Entity("Tim14HCI.Model.TrainLine", b =>
                {
                    b.Property<int>("TrainLineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EndStationID")
                        .HasColumnType("int");

                    b.Property<int>("StartStationID")
                        .HasColumnType("int");

                    b.Property<int>("TrainID")
                        .HasColumnType("int");

                    b.HasKey("TrainLineID");

                    b.HasIndex("StartStationID");

                    b.HasIndex("TrainID");

                    b.ToTable("trainLines");
                });

            modelBuilder.Entity("Tim14HCI.Model.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Email = "mg00@gmail.com",
                            FirstName = "Mladen",
                            LastName = "Gajic",
                            Password = "mladen123",
                            Phone = "05603051",
                            UserRole = 1
                        },
                        new
                        {
                            UserID = 2,
                            Email = "ns00@gmail.com",
                            FirstName = "Nikola",
                            LastName = "Stepic",
                            Password = "aaa",
                            Phone = "123432",
                            UserRole = 1
                        },
                        new
                        {
                            UserID = 3,
                            Email = "jj00@gmail.com",
                            FirstName = "Jovan",
                            LastName = "Jovanovic",
                            Password = "bbb",
                            Phone = "214t5654",
                            UserRole = 0
                        },
                        new
                        {
                            UserID = 4,
                            Email = "dt00@gmail.com",
                            FirstName = "Djordje",
                            LastName = "Tomic",
                            Password = "ccc",
                            Phone = "+381064428108",
                            UserRole = 0
                        });
                });

            modelBuilder.Entity("Tim14HCI.Model.Departure", b =>
                {
                    b.HasOne("Tim14HCI.Model.TrainLine", "TrainLine")
                        .WithMany("Departures")
                        .HasForeignKey("TrainLineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tim14HCI.Model.LinkedStation", b =>
                {
                    b.HasOne("Tim14HCI.Model.Station", "Station1")
                        .WithMany("stations1")
                        .HasForeignKey("Station1ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Tim14HCI.Model.Station", "Station2")
                        .WithMany("stations2")
                        .HasForeignKey("Station2ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Tim14HCI.Model.OnWayStation", b =>
                {
                    b.HasOne("Tim14HCI.Model.Station", "Station")
                        .WithMany()
                        .HasForeignKey("StationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tim14HCI.Model.TrainLine", "TrainLine")
                        .WithMany("OnWayStations")
                        .HasForeignKey("TrainLineID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Tim14HCI.Model.TrainLine", null)
                        .WithOne("EndStation")
                        .HasForeignKey("Tim14HCI.Model.OnWayStation", "TrainLineID1");
                });

            modelBuilder.Entity("Tim14HCI.Model.Ticket", b =>
                {
                    b.HasOne("Tim14HCI.Model.Departure", "Departure")
                        .WithMany("Tickets")
                        .HasForeignKey("DepartureID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tim14HCI.Model.User", "User")
                        .WithMany("Tickets")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tim14HCI.Model.TrainLine", b =>
                {
                    b.HasOne("Tim14HCI.Model.Station", "StartStation")
                        .WithMany()
                        .HasForeignKey("StartStationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tim14HCI.Model.Train", "Train")
                        .WithMany("TrainLines")
                        .HasForeignKey("TrainID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
